library used to connect front-end with server 
-npm i cors
------------------------------------------------------------- - - - - - - - - - - - -
data conversion (json-js) before resolving each api request

middlewares -control api requests
            A request handler with access to the application's request-response cycle is known as middleware.
            It's a function that holds the request object, the response object, and the middleware function.
            Middleware can also send the response to the server before the request.

1-application specific  middleware - apply middleware for application bcz all request 
                                    in that server app need the middleware

2- router specific middleware - apply middleware for only specific requests that 
                                need middleware

db.json - 
router - 

nodemon - porvide automatic recombilation 
npm i -g nodemon - to install nodemon

npx nodemon index.js 

-------------------------------------------------------------------
Home - parent component ----------------add - child component of Home
                        ---------------- videos - child component of Home

add & videos are siblings

data sharing in siblings components  - state lifting
---------------------------------------

                             Home (state- statename,update function)

            
       (update func) add                 Videos (statename)


drag and drop(Events)
---------------
1 - onDragStart()
2 - ondragOver()
3 - onDrop() - to identify drop the element

//all events are target value events


update api
------------
method - PUT(completion updation) , PATCH(partial updation)
in json-server--

step 1:
 {
      "id": 7
      "categoryName": "Films",
      "videos": [],
      
    }

step 2:
 {
      "id": 10
      "title": "Alan Walker, Dua Lipa, Coldplay, Martin Garrix & Kygo, The Chainsmokers Style ðŸ”¥ Summer",
      "coverImg": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRwSUv6UkL5uigCEFGAF8-OzRqf6afO12k0aA&s",
      "videoUrl": "https://www.youtube.com/embed/wwRBVUFNpnk",
      
    }

step 3:
 {
      "id": 7
      "categoryName": "Films",
      "videos": [
         {
             "id": 10
             "title": "Alan Walker, Dua Lipa, Coldplay, Martin Garrix & Kygo, The Chainsmokers Style ðŸ”¥ Summer",
             "coverImg": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRwSUv6UkL5uigCEFGAF8-OzRqf6afO12k0aA&s",
            "videoUrl": "https://www.youtube.com/embed/wwRBVUFNpnk",
      
         }
      ]
      
}

step 4: update the changed data in backend

axious.put('url/id',updatedData as bodyData)


//server hosting

1 .gitignore --> include--- nodemodules
2 package.json -->scripts--> include--- "start": "node index.js"
3 after closing script tag ,then add ---  "engines":{"node":">=14.20.1"},